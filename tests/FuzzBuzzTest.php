<?php

namespace TestWebinar;

use PHPUnit\Framework\TestCase;

class FuzzBuzzTest extends TestCase
{
    private $fuzzBuzzInstance;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->fuzzBuzzInstance = new FizzBuzz();
    }

    public function testGetNotFuzzBuzzResponses()
    {
        $randomInt = rand(0, 100);
        $response = $this->fuzzBuzzInstance->getResponse($randomInt);
        $this->assertEquals($randomInt, $response);
    }

    public function testGetFizzResponse()
    {
        $randomIntMultipleThree = $this->randomInt(3);
        $response = $this->fuzzBuzzInstance->getResponse($randomIntMultipleThree);
        $this->assertEquals('Fizz', $response);
    }

    public function testGetBuzzResponse()
    {
        $randomIntMultipleFive = $this->randomInt(5);
        $response = $this->fuzzBuzzInstance->getResponse($randomIntMultipleFive);
        $this->assertEquals('Buzz', $response);
    }

    public function testGetFizzBuzzResponse()
    {
        $randomInt = rand(0, 6);
        $randomIntMultipleThree = $randomInt * 15;
        $response = $this->fuzzBuzzInstance->getResponse($randomIntMultipleThree);
        $this->assertEquals('FizzBuzz', $response);
    }

    /**
     * @return float|int
     */
    private function randomInt($multiple)
    {
        $randomInt = rand(0, 9);
        return $randomInt * $multiple;
    }

}
